/**
 * Updates the text on the meme preview.
 */
function updateText() {
  const text = document.getElementById('user-text').value;
  document.getElementById('meme-text').innerHTML = text;
}

/**
 * Updates the preview to be the user uploaded image.
 */
function updateImage() {
  const file = document.getElementById('user-picture').files[0];
  // check media type e.g. image/png, text/html
  if (!file.type.startsWith("image/")) {
    alert("Not an image!");
  } else {
    const preview = document.getElementById('meme-picture');

    preview.src = window.URL.createObjectURL(file);
    // We cannot revoke the object URL at this
    // point as html2canvas will need it.
    // preview.onload = function() {
    //   window.URL.revokeObjectURL(this.src);
    // }
  }
}

/**
 * Convert the preview div containing the image and
 * text elements to an image using html2canvas.
 */
function generateMeme() {
  html2canvas(document.getElementById('meme')
    , { allowTaint: true }).then(function (canvas) {
    // The canvas element has been generated by html2canvas
    // and could be appended direct to the HTML.
    // document.body.appendChild(canvas);

    // The HTMLCanvasElement.toDataURL() method returns a Data URL
    // containing a representation of the image in the specified
    // format and image quality.
    const data = canvas.toDataURL('image/jpeg', 1);
    const src = encodeURI(data);
    document.getElementById('screenshot').src = src;
  });
}

/**
 * 
 */
$('#download_meme').click(function(e){
  $(this).attr('href', canvas.toDataURL());
  $(this).attr('download', 'meme.png');
});
function download(url){
  var a = $("<a style='display:none' id='js-downloder'>")
  .attr("href", url)
  .attr("download", "test.png")
  .appendTo("body");

  a[0].click();

  a.remove();
}
  